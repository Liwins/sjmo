package cn.riversky.gitbook.action.observer;

/**
 * 观察者模式是使用频率最高的设计模式之一，它用于建立一种对象与对象之间的依赖关系，一个对象发生改变时将自动通知其他对象
 * ，其他对象将相应做出反映。在观察者模式中，发生改变的对象称为观察目标，而被通知的对象称为观察者，一个观察目标可以对应
 * 多个观察者，而且这些观察者之间可以没有任何相互联系，可以根据需要增加和删除观察者，使得系统更易于扩展。
 * 定义：
 * 定义对象之间的一对多依赖关系，使得每当一个对象状态发生改变时，其相关依赖对象皆得到通知并被自动更新。观察者模式的别名
 * 包括发布-订阅模式（publish/Subscribe）模式，模型-视图（model/view）模式，源-监听器(source/listenerr)模式或从属者（dependents
 * ）模式
 * 理解：
 * 观察者模式描述了如何建立对象与对象之间的依赖关系，以及如何构造满足这种需求的系统。观察者模式包含观察目标和观察者两类
 * 对象，一个目标可以有任意数目的与之相依赖的观察者，一旦观察目标的状态发生改变，所有的观察者都将收到通知，作为对这个通知的
 * 响应，每个观察者都将监视观察目标的状态以使其状态与目标状态同步，这种交互也称为发布-订阅。观察目标是通知的发布者，它发出
 * 通知时并不需要知道谁是它的观察者，可以有任意数目的观察者订阅并接收通知。下面通过示意代码来对该模式进行一步分析。
 * @author riversky E-mail:riversky@126.com
 * @version 创建时间 ： 2018/1/10.
 */
public class Client {

}
