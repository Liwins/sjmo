package cn.riversky.gitbook.action.mediator;

/**
 * 中介者模式（牵一发而动全身--协调多个对象之间的交互）
 * 前端中redux中的store感觉就像是中介者一样，传递着子组件中数据
 * 描述：如果在一个系统中对象之间存在多对多的相互关系，我们可以将对象之间的一些交互行为从各个对象中分离出来，并集中封装
 * 在一个中介者对象中，并由该中介者进行统一协调，这样对象之间多对多的复杂关系就转换为相对简单的一对多关系。通过引入中介者
 * 来简化对象之间的复杂交互，中介者模式是“迪米特法则” 的一个典型应用
 * 定义：用一个中介者对象，来封装一系列的对象交互，中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们
 * 之间的交互。中介者模式又称为调停者模式，它是一种对象行为型模式。
 * 核心：引入了用于协调其他对象/类之间的相互调用的中介者类，为了让系统具有更好的灵活性和可扩展性。
 * 中介者类功能1中转作用（结构型）：通过中介者提供中转作用2协调作用（行为性）：中介者可以更进一步对同事之间的关系进行封装，
 * 同事可以一致的和中介者进行交互，而不需要指明中介者需要具体怎么做，中介者根据封装在自身内部的协调逻辑，对同事的请求进行进一步处理，
 * 将同事之间的关系行为进行分离和封装。
 * 关键点
 * 1中介类具有许多同事对象
 * 2同事类对象具有中介对象（通过调用中介对象与其他同事通信）
 * @author riversky E-mail:riversky@126.com
 * @version 创建时间 ： 2018/1/9.
 */
public class Client {
    public static void main(String[] args) {

    }
}
