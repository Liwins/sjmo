package cn.riversky.gitbook.creatType;

/**
 * 6个创建型设计模式
 * 工厂类：简单工厂，工厂方法，抽象工厂
 * 工厂方法：定一个用于创建对象的接口，让子类决定将哪一个实例化。工厂方法模式使一个类的实例化延迟到其子类。
 * 抽象工厂：提供一个创建一系列相关或者相互依赖对象的接口，而无须指定它们具体的类
 * 单例模式：确保对象的唯一性，保证一个类仅有一个实例，并提供一个访问它的全局访问点
 * 原型模式：对象的克隆，用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象
 * 建造者模式：复杂对象的组装与创建，将一个复杂对象的构建与它的表示进行分离，使得同样的构建过程可以创建不同的表示
 * @author riversky E-mail:riversky@126.com
 * @version 创建时间 ： 2018/1/3.
 */
public class Client {
}
