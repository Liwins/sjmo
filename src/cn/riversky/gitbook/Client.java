package cn.riversky.gitbook;

/**
 * 单一职责原则：一个类只负责一个功能领域中的相应职责
 * 开闭原则：一个软件实体应该对扩展开放，对修改关闭。
 * 里氏替换原则：引用基类（父类）的地方必须能透明地使用其子类的对象
 * 依赖倒转原则：抽象不应该依赖于细节，细节应当依赖于抽象。也就是说面向接口编程，而不是针对实现编程。
 * 接口隔离原则：当一个接口太大时，我们需要将它分割成一些更细小的接口，使用该接口的客户端仅需知道与之相关的方法即可。
 * 合成复用原则：复用时要尽量使用组合/聚合关系（关联关系），少用继承
 * 迪米特法则：最少知识原则，一个软件实体应当尽可能少地与其他实体发生相互作用。（不要和陌生人说话，只与你的直接朋友通信等）
 * @author riversky E-mail:riversky@126.com
 * @version 创建时间 ： 2018/1/5.
 */
public class Client {
    public static void main(String[] args) {

    }
}
